#pragma version 5
intcblock 1 0 4 2
bytecblock 0x746167 0x6f776e6572 0x6173736574 0x7078
txn ApplicationID
intc_1 // 0
==
bnz main_l36
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l35
txn OnCompletion
intc_2 // UpdateApplication
==
bnz main_l34
txn OnCompletion
intc_3 // CloseOut
==
bnz main_l33
txn OnCompletion
intc_0 // OptIn
==
bnz main_l32
txna ApplicationArgs 0
bytec_0 // "tag"
==
bnz main_l31
txna ApplicationArgs 0
pushbytes 0x756e746167 // "untag"
==
bnz main_l30
txna ApplicationArgs 0
pushbytes 0x72657072696365 // "reprice"
==
bnz main_l29
txna ApplicationArgs 0
pushbytes 0x64656c657465 // "delete"
==
bnz main_l25
txna ApplicationArgs 0
pushbytes 0x7075726368617365 // "purchase"
==
bnz main_l21
txna ApplicationArgs 0
pushbytes 0x636f6e666967 // "config"
==
bnz main_l20
txna ApplicationArgs 0
pushbytes 0x6372656174655f7072696365 // "create_price"
==
bnz main_l19
txna ApplicationArgs 0
pushbytes 0x64657374726f795f7072696365 // "destroy_price"
==
bnz main_l18
txna ApplicationArgs 0
pushbytes 0x6372656174655f746167 // "create_tag"
==
bnz main_l17
txna ApplicationArgs 0
pushbytes 0x64657374726f795f746167 // "destroy_tag"
==
bnz main_l16
err
main_l16:
global GroupSize
intc_0 // 1
==
callsub sub0
&&
txna Assets 0
asset_params_get AssetManager
store 24
store 25
txna Assets 0
asset_params_get AssetUnitName
store 26
store 27
load 25
global CurrentApplicationAddress
==
assert
load 27
pushint 3 // 3
callsub sub7
bytec_0 // "tag"
==
&&
txna Assets 0
callsub sub5
&&
return
main_l17:
global GroupSize
intc_0 // 1
==
callsub sub0
&&
pushbytes 0x7261663a746167 // "raf:tag"
txna ApplicationArgs 1
callsub sub4
&&
return
main_l18:
global GroupSize
intc_0 // 1
==
callsub sub0
&&
txna Assets 0
asset_params_get AssetManager
store 20
store 21
txna Assets 0
asset_params_get AssetUnitName
store 22
store 23
load 21
global CurrentApplicationAddress
==
assert
load 23
intc_3 // 2
callsub sub7
bytec_3 // "px"
==
&&
txna Assets 0
callsub sub5
&&
return
main_l19:
global GroupSize
intc_0 // 1
==
callsub sub0
&&
txna Assets 0
asset_params_get AssetCreator
store 18
store 19
load 18
assert
pushbytes 0x7261663a7078 // "raf:px"
pushbytes 0x726166 // "raf"
pushbytes 0x3a // ":"
concat
txna Assets 0
callsub sub11
concat
callsub sub4
&&
return
main_l20:
global GroupSize
intc_0 // 1
==
callsub sub0
&&
intc_0 // 1
&&
return
main_l21:
global GroupSize
intc_3 // 2
==
txn TypeEnum
pushint 6 // appl
==
&&
txn ApplicationID
global CurrentApplicationID
==
&&
txna Accounts 1
bytec_1 // "owner"
app_local_get
store 12
txna Accounts 1
bytec_2 // "asset"
app_local_get
store 13
intc_0 // 1
&&
gtxn 1 Sender
gtxn 0 Sender
==
&&
gtxn 1 Receiver
load 12
==
&&
txna Accounts 0
gtxna 0 ApplicationArgs 1
btoi
asset_holding_get AssetBalance
store 15
store 16
load 15
assert
gtxna 0 ApplicationArgs 1
btoi
callsub sub6
intc_1 // 0
==
gtxn 1 TypeEnum
intc_0 // pay
==
&&
gtxn 1 Amount
load 16
==
&&
gtxn 1 XferAsset
gtxna 0 ApplicationArgs 1
btoi
callsub sub6
==
gtxn 1 TypeEnum
intc_2 // axfer
==
&&
gtxn 1 AssetAmount
load 16
==
&&
||
&&
intc_3 // 2
store 17
main_l22:
load 17
gtxn 0 NumAppArgs
<
bnz main_l24
intc_0 // 1
&&
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
intc_1 // 0
itxn_field AssetAmount
txn Sender
itxn_field AssetCloseTo
itxn_submit
intc_0 // 1
&&
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
intc_3 // CloseOut
itxn_field OnCompletion
itxn_submit
intc_0 // 1
&&
itxn_begin
intc_0 // pay
itxn_field TypeEnum
intc_1 // 0
itxn_field Amount
load 12
itxn_field CloseRemainderTo
itxn_submit
intc_0 // 1
&&
return
main_l24:
txna Accounts 1
load 17
gtxnas 0 ApplicationArgs
intc_1 // 0
callsub sub3
pop
load 17
intc_0 // 1
+
store 17
b main_l22
main_l25:
global GroupSize
intc_0 // 1
==
txna Accounts 1
callsub sub1
callsub sub0
||
&&
txna Accounts 1
bytec_1 // "owner"
app_local_get
store 12
txna Accounts 1
bytec_2 // "asset"
app_local_get
store 13
intc_0 // 1
&&
intc_0 // 1
store 14
main_l26:
load 14
txn NumAssets
<
bnz main_l28
intc_0 // 1
&&
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
txna Assets 0
itxn_field XferAsset
intc_1 // 0
itxn_field AssetAmount
txna Accounts 1
itxn_field Sender
load 12
itxn_field AssetCloseTo
itxn_submit
intc_0 // 1
&&
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
global CurrentApplicationID
itxn_field ApplicationID
intc_3 // CloseOut
itxn_field OnCompletion
txna Accounts 1
itxn_field Sender
itxn_submit
intc_0 // 1
&&
itxn_begin
intc_0 // pay
itxn_field TypeEnum
txna Accounts 1
itxn_field Sender
intc_1 // 0
itxn_field Amount
load 12
itxn_field CloseRemainderTo
itxn_submit
intc_0 // 1
&&
return
main_l28:
txna Accounts 1
load 14
txnas Assets
intc_1 // 0
callsub sub3
pop
load 14
intc_0 // 1
+
store 14
b main_l26
main_l29:
global GroupSize
intc_0 // 1
==
txna Accounts 1
callsub sub1
&&
txna Assets 0
asset_params_get AssetManager
store 8
store 9
txna Assets 0
asset_params_get AssetUnitName
store 10
store 11
load 9
global CurrentApplicationAddress
==
assert
load 11
intc_3 // 2
callsub sub7
bytec_3 // "px"
==
&&
txna Accounts 1
global CurrentApplicationID
app_opted_in
&&
txna Accounts 1
txna Assets 0
callsub sub2
&&
txna Accounts 1
txna Assets 0
txna ApplicationArgs 1
btoi
callsub sub3
&&
return
main_l30:
global GroupSize
intc_0 // 1
==
txna Accounts 1
callsub sub1
&&
txna Assets 0
asset_params_get AssetManager
store 4
store 5
txna Assets 0
asset_params_get AssetUnitName
store 6
store 7
load 5
global CurrentApplicationAddress
==
assert
load 7
pushint 3 // 3
callsub sub7
bytec_0 // "tag"
==
&&
txna Accounts 1
global CurrentApplicationID
app_opted_in
&&
txna Accounts 1
txna Assets 0
intc_1 // 0
callsub sub3
&&
return
main_l31:
global GroupSize
intc_0 // 1
==
txna Accounts 1
callsub sub1
&&
txna Assets 0
asset_params_get AssetManager
store 0
store 1
txna Assets 0
asset_params_get AssetUnitName
store 2
store 3
load 1
global CurrentApplicationAddress
==
assert
load 3
pushint 3 // 3
callsub sub7
bytec_0 // "tag"
==
&&
txna Accounts 1
global CurrentApplicationID
app_opted_in
&&
txna Accounts 1
txna Assets 0
callsub sub2
&&
txna Accounts 1
txna Assets 0
intc_0 // 1
callsub sub3
&&
return
main_l32:
global GroupSize
pushint 5 // 5
==
gtxn 0 TypeEnum
intc_0 // pay
==
&&
gtxn 0 Amount
intc_1 // 0
>=
&&
gtxn 1 TypeEnum
pushint 6 // appl
==
&&
gtxn 1 OnCompletion
intc_0 // OptIn
==
&&
gtxn 1 ApplicationID
global CurrentApplicationID
==
&&
gtxn 2 TypeEnum
intc_2 // axfer
==
&&
gtxn 2 AssetAmount
intc_1 // 0
==
&&
gtxn 2 Sender
gtxn 3 AssetReceiver
==
&&
gtxn 2 XferAsset
gtxn 3 XferAsset
==
&&
gtxn 3 TypeEnum
intc_2 // axfer
==
&&
gtxn 3 AssetAmount
intc_1 // 0
>
&&
gtxn 3 Sender
gtxn 0 Sender
==
&&
gtxn 3 AssetReceiver
gtxn 0 Receiver
==
&&
gtxn 4 TypeEnum
intc_0 // pay
==
&&
gtxn 4 Amount
intc_1 // 0
==
&&
gtxn 4 RekeyTo
global CurrentApplicationAddress
==
&&
gtxn 4 Sender
gtxn 0 Receiver
==
&&
gtxn 4 TypeEnum
intc_0 // pay
==
&&
gtxn 4 Amount
intc_1 // 0
==
&&
gtxn 4 RekeyTo
global CurrentApplicationAddress
==
&&
gtxn 4 Sender
gtxn 0 Receiver
==
&&
gtxn 0 Receiver
bytec_1 // "owner"
gtxn 0 Sender
app_local_put
gtxn 0 Receiver
bytec_2 // "asset"
gtxn 4 XferAsset
app_local_put
intc_0 // 1
&&
return
main_l33:
global CreatorAddress
txn Sender
==
return
main_l34:
global CreatorAddress
txn Sender
==
return
main_l35:
global CreatorAddress
txn Sender
==
return
main_l36:
intc_0 // 1
return
sub0: // valid_admin_app_call
txn TypeEnum
pushint 6 // appl
==
txn OnCompletion
intc_1 // NoOp
==
&&
txn ApplicationID
global CurrentApplicationID
==
&&
txn Sender
global CreatorAddress
==
&&
retsub
sub1: // valid_owner_app_call
store 28
txn TypeEnum
pushint 6 // appl
==
txn OnCompletion
intc_1 // NoOp
==
&&
txn ApplicationID
global CurrentApplicationID
==
&&
txn Sender
load 28
bytec_1 // "owner"
app_local_get
==
&&
retsub
sub2: // ensure_opted_in
store 30
store 29
load 29
load 30
asset_holding_get AssetBalance
store 31
store 32
load 31
!
bnz sub2_l2
intc_0 // 1
b sub2_l3
sub2_l2:
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
load 30
itxn_field XferAsset
intc_1 // 0
itxn_field AssetAmount
load 29
itxn_field AssetReceiver
load 29
itxn_field Sender
itxn_submit
intc_0 // 1
sub2_l3:
retsub
sub3: // ensure_token_balance
store 35
store 34
store 33
load 33
load 34
asset_holding_get AssetBalance
store 36
store 37
load 36
assert
load 35
intc_1 // 0
==
bnz sub3_l6
load 35
load 37
>
bnz sub3_l5
load 35
load 37
<
bnz sub3_l4
intc_0 // 1
b sub3_l7
sub3_l4:
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
load 34
itxn_field XferAsset
load 37
load 35
-
itxn_field AssetAmount
global CurrentApplicationAddress
itxn_field AssetReceiver
load 33
itxn_field Sender
itxn_submit
intc_0 // 1
b sub3_l7
sub3_l5:
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
load 34
itxn_field XferAsset
load 35
load 37
-
itxn_field AssetAmount
load 33
itxn_field AssetReceiver
global CurrentApplicationAddress
itxn_field Sender
itxn_submit
intc_0 // 1
b sub3_l7
sub3_l6:
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
intc_1 // 0
itxn_field AssetAmount
load 34
itxn_field XferAsset
global CurrentApplicationAddress
itxn_field AssetCloseTo
load 33
itxn_field Sender
itxn_submit
intc_0 // 1
sub3_l7:
retsub
sub4: // create_token
store 39
store 38
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
load 38
itxn_field ConfigAssetUnitName
load 39
itxn_field ConfigAssetName
global CurrentApplicationAddress
itxn_field ConfigAssetManager
global CurrentApplicationAddress
itxn_field ConfigAssetClawback
global CurrentApplicationAddress
itxn_field ConfigAssetReserve
global CurrentApplicationAddress
itxn_field ConfigAssetFreeze
pushint 10000000000 // 10000000000
itxn_field ConfigAssetTotal
intc_1 // 0
itxn_field ConfigAssetDecimals
pushbytes 0x726172652e6166 // "rare.af"
pushbytes 0x2f7461672f // "/tag/"
concat
load 39
concat
itxn_field ConfigAssetURL
itxn_submit
intc_0 // 1
retsub
sub5: // destroy_token
store 40
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
load 40
itxn_field ConfigAsset
itxn_submit
intc_0 // 1
retsub
sub6: // price_id
store 41
load 41
asset_params_get AssetName
store 42
store 43
load 42
assert
load 43
pushbytes 0x6e616d65 // "name"
app_global_get
len
load 43
len
substring3
callsub sub10
retsub
sub7: // suffix
store 49
store 48
load 48
load 48
len
load 49
-
load 48
len
substring3
retsub
sub8: // ascii_to_int
store 45
load 45
pushint 48 // 48
-
retsub
sub9: // int_to_ascii
store 51
pushbytes 0x30313233343536373839 // "0123456789"
load 51
load 51
intc_0 // 1
+
substring3
retsub
sub10: // atoi
store 44
load 44
len
intc_1 // 0
>
bnz sub10_l2
intc_1 // 0
b sub10_l3
sub10_l2:
load 44
callsub sub12
callsub sub8
load 44
len
intc_0 // 1
-
callsub sub13
*
load 44
intc_0 // 1
load 44
len
substring3
load 44
swap
callsub sub10
swap
store 44
+
sub10_l3:
retsub
sub11: // itoa
store 50
load 50
intc_1 // 0
==
bnz sub11_l5
load 50
pushint 10 // 10
/
intc_1 // 0
>
bnz sub11_l4
pushbytes 0x // ""
sub11_l3:
load 50
pushint 10 // 10
%
callsub sub9
concat
b sub11_l6
sub11_l4:
load 50
pushint 10 // 10
/
load 50
swap
callsub sub11
swap
store 50
b sub11_l3
sub11_l5:
pushbytes 0x30 // "0"
sub11_l6:
retsub
sub12: // head
store 46
load 46
intc_1 // 0
getbyte
retsub
sub13: // ilog10
store 47
pushint 10 // 10
load 47
exp
retsub